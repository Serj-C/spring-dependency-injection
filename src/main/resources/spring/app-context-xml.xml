<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.example.spring_dependency_injection, com.example.field_injection"/>

    <bean id="renderer"
          class="com.example.spring_dependency_injection.StandardOutMessageRenderer"
          p:messageProvider-ref="provider"/>

    <bean id="provider"
          class="com.example.spring_dependency_injection.ConfigurableMessageProvider"/>

    <bean id="message" class="java.lang.String"
          c:_0="I hope that someone gets my message in a bottle"/>

    <!-- Simple Values Injection -->
    <bean id="injectSimpleValues"
          class="com.example.simple_values_injection.InjectSimpleValues"
          p:name="John Meyer"
          p:age="39"
          p:height="1.92"
          p:programmer="false"
          p:ageInSeconds="1241401112"/>

    <!-- Simple Values Injection using SpEL -->
    <bean id="injectSimpleConfig"
          class="com.example.simple_values_injection.spel.InjectSimpleConfig"/>

    <bean id="injectSimpleSpel"
          class="com.example.simple_values_injection.spel.InjectSimpleSpel"
          p:name="#{injectSimpleConfig.name}"
          p:age="#{injectSimpleConfig.age + 1}"
          p:height="#{injectSimpleConfig.height}"
          p:programmer="#{injectSimpleConfig.programmer}"
          p:ageInSeconds="#{injectSimpleConfig.ageInSeconds}"/>

    <!-- Collection Injection -->
    <bean id="lyricHolder"
          class="com.example.collection_injection.LyricHolder"/>

    <bean id="injectCollection" class="main.dependency_injection.CollectionInjection">
        <property name="map">
            <map>
                <entry key="someValue">
                    <value>It's a Friday, we finally maded it</value>
                </entry>
                <entry key="someBean">
                    <ref bean="lyricHolder"/>
                </entry>
                <!-- Alternative option - using attributes (more compact) -->
                <!--<entry key="someValue" value="It's a Friday, we finally made it"/>
                <entry key="someBean" value-ref="lyricHolder"/>-->
            </map>
        </property>
        <property name="props">
            <props>
                <prop key="firstName">John</prop>
                <prop key="secondName">Meyer</prop>
            </props>
        </property>
        <property name="set">
            <set>
                <value>I can't believe I get to see your face</value>
                <ref bean="lyricHolder"/>
            </set>
        </property>
        <property name="list">
            <list>
                <value>You've been working and I've been waiting</value>
                <ref bean="lyricHolder"/>
            </list>
        </property>
    </bean>

    <!-- Method Injection -->
    <bean id="singer" class="com.example.method_injection.Singer"
          scope="prototype"/>

    <bean id="abstractLookupBean"
          class="com.example.method_injection.AbstractLookupDemoBean">
        <lookup-method name="getMySinger" bean="singer"/>
    </bean>

    <bean id="standardLookupBean"
          class="com.example.method_injection.StandardLookupDemoBean">
        <property name="mySinger" ref="singer"/>
    </bean>

    <!-- Method Replacement -->
    <bean id="methodReplacer"
          class="com.example.method_replacement.FormatMessageReplacer"/>

    <bean id="replacementTarget"
          class="com.example.method_replacement.ReplacementTarget">
        <replaced-method name="formatMessage" replacer="methodReplacer">
            <arg-type>String</arg-type>
        </replaced-method>
    </bean>

    <bean id="standardTarget"
          class="com.example.method_replacement.ReplacementTarget"/>
</beans>